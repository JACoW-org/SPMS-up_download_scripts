#!/usr/bin/perl
# vim: set ai sw=4 ts=4 tw=80:


#   iaoptions.config $Version 1.8 2012.05.20$
#   Copyright (C) 2004-2012 Sincrotrone Trieste S.C.p.A.
#   <http://www.elettra.trieste.it> by Ivan Andrian
#
#   configuration file for: 
#                         
#   JACoW.upload             
#   editor.download         
#   metadistill             
#   distill                 
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#   You can also get a copy of the license through the web at
#   <http://www.gnu.org/licenses/gpl.html>

package iaoptions ;

use Digest::MD5 qw(md5 md5_hex);
use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
use Data::Dumper;
$Data::Dumper::Terse = 1; 

my %script_options =(
	#
	# Common options
	#
    "root_dir"      =>"/tmp/",      # base dir where paper dirs are located
    "debug"         =>1,            # 1 shows useful info, 0 is for production
    "parms_override"=>1,            # 1 allows parameters overriding via GET
                                    #   parameters (unsecure but handy)
                                    # 0 does not allow this behaviour
                                    #   (recommended when in production)
#    "referer"       => ["https://oraweb.cern.ch/pls/PLSNAME/",
#                        "http://oraweb.cern.ch/pls/PLSNAME/"
#                        ],
                                    # HTTP_REFERER to be checked for security
                                    # reasons. Only calls to these scripts 'coming' 
                                    # from that URLs will be honoured.
                                    # Uncomment the lines and set the correct
                                    # values according to the SPMS URL(s)
                                    # Leave commented if you don't want this 
                                    # security features (means 'allow all')
    "referer_pwd_override"  => "CHANGE_ME_ON_INSTALL_2JOD9SJ",
                                    # this is a password to override the referer
                                    # check. Use it with caution, and can be
                                    # used as a GET parameter.
                                    # CHANGE IT because this is readable from
                                    # the source code by everybody.
	#
	# Download options
	#
	"hash_seedD"	=>"CHANGE_ME_ON_INSTALL_mmsbdh234",
									# shared secret to restrict downloads
									# comment this line if you want to be able
									# to download papers by anyone via Agenda 
									# and XML packages (URLs)
									# If set it must match the SPMS parameter 
									# "Secret Passphrase for paper DOWNLOAD" 
									# under "Web Configuration"
	#
	# Upload options
	#
	"hash_seedU"	=>"CHANGE_ME_ON_INSTALL_mdsn23034b5ffgdg6f",
									# shared secret to restrict uploads
									# CHANGE THIS AFTER INSTALL!!
									# this parameter must be set and match
									# the SPMS parameter "Secret Passphrase for
									# paper UPLOAD" under "Web Configuration"
    "max_size"      =>100000000,    # max bytes allowed: 0 is unlimited
    "check_type"    =>"pdf,ps,eps", # this_file_type's to check
    "uppercase"     =>"tran,pdf,ps,eps",
                                    # which file types to uppercase (note:
                                    # file types in the SPMS 'sense', NOT file extensions!
                                    # be sure to include transparencies (TRAN)
    "lowercase"     =>"",           # which file types to lowercase (idem)
    "authpdfrole"   =>'AUTHOR',     # role (sent by the SPMS) to distinguish the author
    "suffix4authpdf"=>'_AUTHOR',    # suffix to add to the PDF directly uploaded
									# by the author
    "upload_chmod"  =>0666,         # set this to "" or 0 in Window$
    "counter_length"=>4,            # count length for version (ABCD.0001.DOC)
	#
	# Distill options
	#
    "distill"       =>0,            # wether to distill (1) or not (0)
    "dist_dir"      =>"/var/lib/vmware/shares/watchedfolders/in/",      
									# base dir where paper are being distilled
    "out_dir"       =>"/var/lib/vmware/shares/watchedfolders/out/",      
									# base dir where the PDFs are expected
    "prefix"        =>'JACoW-',     # prefix for temporary PS file
    "infix"         =>'.AUTODISTILL',     # infix for auto-distilled PDF, to be saved in the "file upload" area
    "distrole"      =>'AUTHOR',     # role (sent by the SPMS) to distill for. Any if empty
	"timeout"		=>600,			# timeout (seconds) after wich give up
	"sleep"			=>5,			# how much (seconds) to sleep between checks
    "proxy"         =>"",           # proxy server, syntax: http://proxy.domain.dom:port/
                                    # leave empty if your server does not require any
	#
	# zipdownload part
	#
	"tmp_dir"		=>"/tmp/",		# temporary directory for the ZIP files
	"logext" 		=>".JACoW_log",
	"loggen"		=>".general.JACoW_log",
	"lastext"		=>'< last >',

	"mask"			=>".JACoW_log",	# comma-separated extensions of files not 
									# to show on the interface
	"forceview"		=>".general.JACoW_log",	# comma-separated extensions of files 	
									# to show regardless of the mask
    "compression"   =>COMPRESSION_DEFLATED,   # compression method: use 
                                    # COMPRESSION_STORED not to compress: 
                                    #   low impact on server performance, 
                                    #   big files, high download times
                                    # COMPRESSION_DEFLATED to compress:
                                    #   high impact on server performance, 
                                    #   small files, low download times
	#
	# Dummy part
	#
    "dummy"         =>0             # dummy value to end the hash definition
);


# This hash is used to filter out sensible security information from the LOGS
%donotlog = (
    "hash_seedD"    		=> 1,
    "hash_seedU"    		=> 1,
    "referer_pwd_override"  => 1
);


##########################
# methods
##########################

require 'dumpvar.pl' if iaoptions::get('debug') == 1 || iaoptions::get('log');    # DEBUG || LOG

sub get {
	my $what = $_[0];
	if (exists($script_options{$what}) ) {
		return $script_options{$what};
	} else {
		return 0;
	}	
}

sub set {
        my $para = $_[0];
            my $what = $_[1];
                $script_options{$para} = $what;
            }

sub keys {
	return keys(%script_options);
}

sub getdonotlog {
	my $what = $_[0];
	if (exists($donotlog{$what}) ) {
		return $donotlog{$what};
	} else {
		return 0;
	}	
}

sub iadie {
    print("<p><strong>FATAL ERROR:</strong> $_[0].</p>");
    die($_[0]);
}

sub debug {
        print($_[0]) if $script_options{'debug'};
}

sub ddebug {
        print(Dumper($_[0])) if $script_options{'debug'};
}

sub dump {
    print(Dumper(\%script_options));
}

sub check_referer {
    # if the secret override password was given, and it's correct, do not check
    # the referer variable
    return if (defined($_[0]) && ($_[0] ne '') && ( $_[0] eq get('referer_pwd_override')));

    # Security test: check if the REFERER is correct
    if (get('referer')) {
        my $badcall = 1;
        my $refrarr = iaoptions::get('referer');
        foreach my $refr (@$refrarr) {
            $refr = lc($refr);
            if ( lc($ENV{HTTP_REFERER}) =~ m/^$refr/ ) {
                $badcall = 0;
            }
        }
        iadie('Not allowed') if $badcall;
    }
}

sub hashitD {
	# creates an MD5 hash based on the shared hash_seedD and a given passed string
	# (Download)
	return md5_hex(get('hash_seedD'), $_[0]);
}

sub hashitU {
	# creates an MD5 hash based on the shared hash_seedU and a given passed string
	# (Upload)
	return md5_hex(get('hash_seedU'), $_[0]);
}

1;

=head1 NAME

iaoptions.config

Main (and only) configuration file for JACoW.upload, editor.download, distill,
metadistill etc.
 
=head1 DISTILL PARAMETERS

If the parameter "distill" is set to 1, any PS file uploaded by authors will be
converted to PDF and shown, in order to help detecting errors immediately.

In order to have this distill feature working, you need an external tool to
generate these PDF's. What the upload script will do is to place the PS in a
certain directory, and wait for a generated PDF to appear in another (or an
error log given).

You will need to tune the following parameters: 

dist_dir: the directory where to place the PostScript file to be converted

out_dir : the directory where the distill script will expect the PDF or the LOG


Other tunable parameters could be the following ones (but we discourage doing it)

distrole: SPMS roles to distill for (default is 'AUTHOR')

timeout : seconds to wait for the PDF (default is 10 minutes!)

sleep   : seconds to wait between every check (default is 5)

proxy   : server needed to access the Internet, if needed by the file server
          default is empty, meaning no proxy needed.
          syntax is: http://proxy.domain.dom:port/

referer : URL from which the connections are allowed (put here the correct SPMS
          URL to allow file uploads/downloads)

referer_pwd_override : a password to disable the REFERER check. Remember to
          CHANGE this value, since if not papers are downloadable from everywhere!

