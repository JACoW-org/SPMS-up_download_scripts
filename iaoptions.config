#!/usr/bin/perl
# vim: set ai sw=4 ts=4 tw=80:


#   iaoptions.config $Version 1.9 2012.08.28$
#   Copyright (C) 2004-2014 Elettra - Sincrotrone Trieste S.C.p.A.
#   <http://www.elettra.eu> by Ivan Andrian
#
#   configuration file for: 
#                         
#   JACoW.upload             
#   editor.download         
#   metadistill             
#   distill                 
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 2 of the License, or
#   (at your option) any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#   You can also get a copy of the license through the web at
#   <http://www.gnu.org/licenses/gpl.html>
package iaoptions ;

use Digest::MD5 qw(md5 md5_hex);
use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
use Data::Dumper;
use File::Copy;
$Data::Dumper::Terse = 1; 

my %script_options =(
	#
	# Common options
	#
    "root_dir"      =>"/tmp/papers/",
									# base dir where paper dirs are located
    "debug"         =>1,            # 1 shows useful info, 0 is for production
    "parms_override"=>1,            # 1 allows parameters overriding via GET
                                    #   parameters (unsecure but handy)
                                    # 0 does not allow this behaviour
                                    #   (recommended when in production)
	#
	# Download options
	#
	"hash_seedD"	=>"CHANGE_ME_ON_INSTALL_mmsbdh234",
									# shared secret to restrict downloads
									# comment this line if you want to be able
									# to download papers by anyone via Agenda 
									# and XML packages (URLs)
									# If set it must match the SPMS parameter 
									# "Secret Passphrase for paper DOWNLOAD" 
									# under "Web Configuration"
	#
	# Upload options
	#
	"hash_seedU"	=>"CHANGE_ME_ON_INSTALL_mdsn23034b5ffgdg6f",
									# shared secret to restrict uploads
									# CHANGE THIS AFTER INSTALL!!
									# this parameter must be set and match
									# the SPMS parameter "Secret Passphrase for
									# paper UPLOAD" under "Web Configuration"
    "max_size"      =>100000000,    # max bytes allowed: 0 is unlimited
    "check_type"    =>"pdf,ps,eps", # this_file_type's to check
    "uppercase"     =>"tran,pdf,ps,eps,pdfs",
                                    # which file types to uppercase (note:
                                    # file types in the SPMS 'sense', NOT file extensions!
                                    # be sure to include transparencies (TRAN)
    "lowercase"     =>"",           # which file types to lowercase (idem)
    "authpdfrole"   =>'AUTHOR',     # role (sent by the SPMS) to distinguish the author
    "suffix4authpdf"=>'_AUTHOR',    # suffix to add to the PDF directly uploaded
									# by the author
    "upload_chmod"  =>0666,         # set this to "" or 0 in Window$
    "counter_length"=>4,            # count length for version (ABCD.0001.DOC)
	#
	# Distill options
	#
    "distill"       =>0,            # wether to distill (1) or not (0)
									#
    "distill_types" =>"pdf,ps,pdfs",# which file types to distill (note:
                                    # file types in the SPMS 'sense', NOT file extensions!
									#
    "distill_script" =>"distill",   # Name of the basic distill script. If
									# present on the same server and directory
									# as metadistill, it should just be the script 
									# name like 'distill' or 'distill.pl'. 
									# Otherwhise, a full path/URL could be used
	"metadistill_script"	=>"http://my.server.dom/cgi-bin/metadistill",			
									# Points to the full URL of the metadistill
									# script. If you change the name of the
									# script (to 'metadistill.pl', for example)
									# update this parameter accordingly.
									# This base url should be the one in the SPMS
									# under "Author file upload script", but
									# with the different script name
    "dist_dir"      =>"/var/lib/vmware/shares/watchedfolders/in/",      
									# base dir where paper are being distilled
    "out_dir"       =>"/var/lib/vmware/shares/watchedfolders/out/",      
									# base dir where the PDFs are expected
    "gs_active"	    =>0,						# wether to distill activily with Ghostscript (1) or not (0)
    "gs_exe"	    =>"/usr/bin/gs",					# Only needed if gsdistill is set to 1. Points in this 
									# case to the gs executable of your system
									# Be sure to have the latest stable version
									# of GhostScript, if not you could get many
									# errors when distilling
	"gs_fonts"      =>"./gsfonts",	# The scripts come with a gsfonts directory,
                                    # this path should point to this gsfonts
                                    # directory and is provided to ghostscript
                                    # for additional font mapping. You also need
                                    # to modify $gs_fonts/Fontmap.GS to point to
                                    # your ghostscript fontmap file.
    "prefix"        =>'JACoW-',     # prefix for temporary PS file
    "infix"         =>'.AUTODISTILL',     # infix for auto-distilled PDF, to be saved in the "file upload" area
    "distrole"      =>'AUTHOR',     # role (sent by the SPMS) to distill for. Any if empty
	"timeout"		=>600,			# timeout (seconds) after wich give up
	"sleep"			=>5,			# how much (seconds) to sleep between checks
    "proxy"         =>"",           # proxy server, syntax: http://proxy.domain.dom:port/
                                    # leave empty if your server does not require any
	#
	# zipdownload part
	#
	"tmp_dir"		=>"/tmp/",		# temporary directory for the ZIP files
	"logext" 		=>".JACoW_log",
	"loggen"		=>".general.JACoW_log",
	"lastext"		=>'< last >',

	"mask"			=>".JACoW_log",	# comma-separated extensions of files not 
									# to show on the interface
	"forceview"		=>".general.JACoW_log",	# comma-separated extensions of files 	
									# to show regardless of the mask
    "compression"   =>COMPRESSION_DEFLATED,   # compression method: use 
                                    # COMPRESSION_STORED not to compress: 
                                    #   low impact on server performance, 
                                    #   big files, high download times
                                    # COMPRESSION_DEFLATED to compress:
                                    #   high impact on server performance, 
                                    #   small files, low download times
	#
	# Dummy part
	#
    "dummy"         =>0             # dummy value to end the hash definition
);


# This hash is used to filter out sensible security information from the LOGS
%donotlog = (
    "hash_seedD"    		=> 1,
    "hash_seedU"    		=> 1
);


##########################
# methods
##########################

require 'dumpvar.pl' if iaoptions::get('debug') == 1 || iaoptions::get('log');    # DEBUG || LOG

sub get {
	my $what = $_[0];
	if (exists($script_options{$what}) ) {
		return $script_options{$what};
	} else {
		return 0;
	}	
}

sub set {
        my $para = $_[0];
            my $what = $_[1];
                $script_options{$para} = $what;
            }

sub keys {
	return keys(%script_options);
}

sub getdonotlog {
	my $what = $_[0];
	if (exists($donotlog{$what}) ) {
		return $donotlog{$what};
	} else {
		return 0;
	}	
}

sub iadie {
    print("<p><strong>FATAL ERROR:</strong> $_[0].</p>");
    die($_[0]);
}

sub debug {
        print($_[0]) if $script_options{'debug'};
}

sub ddebug {
        print(Dumper($_[0])) if $script_options{'debug'};
}

sub dump {
    print(Dumper(\%script_options));
}

sub hashitD {
	# creates an MD5 hash based on the shared hash_seedD and a given passed string
	# (Download)
	return md5_hex(get('hash_seedD'), $_[0]);
}

sub hashitU {
	# creates an MD5 hash based on the shared hash_seedU and a given passed string
	# (Upload)
	return md5_hex(get('hash_seedU'), $_[0]);
}

sub execgs {
	# executes the configured Ghostscript executable to create a JACoW compliant
	# PDF file.
	my $file_type = $_[0]; # must be 'ps' or 'pdf'
	my $tempfn = $_[1]; # The name of the temporary file to be used 
	my $gs_infile = iaoptions::get('dist_dir')."$tempfn";
	my $gs_outfile = iaoptions::get('out_dir')."$tempfn".".pdf";
	my $gs_tmpfile = iaoptions::get('out_dir')."$tempfn".".pdftmp";
	my $gs_logfile = iaoptions::get('out_dir')."$tempfn".".log";
	my $gs_tmplogfile = iaoptions::get('out_dir')."$tempfn".".logtmp";
	my $gs_fonts = iaoptions::get('gs_fonts');

	sleep(1);
	my $gs_exec_string = iaoptions::get('gs_exe') . " "
		."-dBATCH " # Exit after processing instead of showing command line
		."-dNOPAUSE " # No prompt at the end of each page
		."-dSAFER " # Disables PostScript "deletefile" and "renamefile" commands
		."-sDEVICE=pdfwrite " # We want to create a PDF
		."-dFIXEDMEDIA -dDEVICEWIDTHPOINTS=595 -dDEVICEHEIGHTPOINTS=792 " # Force papersize to be  
																		  # the JACoW Paper Size
		."-r1200 " # Resolution/DPI = 1200 (used for e.g. GrayScale images)
		."-dCompatibilityLevel=1.6 " # We want PDF version 1.6, but it depends on the Ghostscript 
									 # version which PDF compatibility is supported. Older versions
									 # may only produce PDF 1.4 or 1.5 with this flag
		."-dPDFSETTINGS=/prepress " # (high quality, color preserving, 300 dpi imgs)
		."-dSubsetFonts=true " # Do not embed all characters of a font, subset (fixes problems with some MAC papers)
		."-dCompressFonts=false " # No font compression (file is slightly larger, displaying faster)
		."-dEmbedAllFonts=true " # We even embed basic system fonts
		."-dNOPLATFONTS " # Do not use platform supplied fonts (e.g. by X Windows)
		."-I\"" . $gs_fonts . "\" " # Add this as a search path for the fontmap file
		."-sFONTPATH=\"" . $gs_fonts . "\" " # Add this as a search path for additional fonts
		."-sOutputFile=";
		;
	my $gs_command = $gs_exec_string.$gs_tmpfile.' '.$gs_infile.' 2>&1';
	print "<xmp>Ghostscript command used: $gs_command</xmp>" 
				if iaoptions::get('debug');    # DEBUG
	my $gs_output = qx($gs_command);
	my $gs_error_code = $? >> 8;
	# If an error occured during processing we write a log file for the process.
	# We also first create the files with the "tmp" extension and move them
	# when we are done. This prevents the distill script from reading an
	# unfinished file.
	if ($gs_error_code) {
		# Write log into file
		open(OUTLOG,">$gs_tmplogfile");
        print(OUTLOG $gs_output);
		print(OUTLOG "\n\nCommand used:\n$gs_command\n\n");
        close(OUTLOG);
		move($gs_tmplogfile, $gs_logfile);
	} else {
		move($gs_tmpfile, $gs_outfile);
	}
}

1;

=head1 NAME

iaoptions.config

Main (and only) configuration file for JACoW.upload, editor.download, distill,
metadistill etc.
 
=head1 DISTILL PARAMETERS

If the parameter "distill" is set to 1, any PS file uploaded by authors will be
converted to PDF and shown. Also PDFs uploaded by the author are redistilled to
e.g. embed fonts. This is done to help detecting errors immediately.

In order to have this distill feature working, you need an external tool to
generate these PDF's. There are two methods.
1. What the upload script will do is to place the PS in a
certain directory, and wait for a generated PDF to appear in another (or an
error log given).
2. The scripts will use Ghostscript to generate the PDF and Ghostscript needs to
be installed on you system.

You will need to tune the following parameters: 

distill_script: 	the base distill script name (normally you don't need to change
					it from 'distill')

metadistill_script: the FQDN of the metadistill script - be sure this reflects
					your configuration correctly

dist_dir : the directory where to place the PostScript file to be converted

out_dir  : the directory where the distill script will expect the PDF or the LOG

If you want to use Ghostscript you have to configure also these parameters:

gs_active: To use Ghostscript this needs to be set

gs_exe	 : To use gs this needs to point to your gs executable.

gs_fonts : This directory comes with the JUDS scripts and contains additional
           font mapping for succesfull font substitution. We suggest to change
           the relative path to an absolute path, also update the Fontmap.GS
           file in $gs_fonts/Fontmap.GS to point to the Fontmap of your
           ghostscript installation.

Other tunable parameters could be the following ones (but we discourage doing it)

distrole: SPMS roles to distill for (default is 'AUTHOR')

timeout : seconds to wait for the PDF (default is 10 minutes!)

sleep   : seconds to wait between every check (default is 5)

proxy   : server needed to access the Internet, if needed by the file server
          default is empty, meaning no proxy needed.
          syntax is: http://proxy.domain.dom:port/

